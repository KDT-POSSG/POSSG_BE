<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="possg.com.a.dao.ConvenienceDao">

<select id="idcheck" parameterType="java.lang.String"
	resultType="java.lang.Integer">
	select count(*)
	from Convenience
	where user_id = #{userId}
</select>

<insert id="adduser" parameterType="possg.com.a.dto.ConvenienceDto">
	insert into Convenience(user_id, pwd, representative_name, branch_name, phone_number, registration_date, conv_status, conv_key)
	values(#{userId}, #{pwd}, #{representativeName}, #{branchName}, #{phoneNumber}, now(), 1, #{convKey}) 
</insert>

<update id="updateCodeStatus" parameterType="possg.com.a.dto.ConvenienceDto">
    UPDATE Account_num
	SET code_status = 1
	WHERE account_code = #{convKey};
</update>

<select id="login" parameterType="possg.com.a.dto.ConvenienceDto"
	resultType="possg.com.a.dto.ConvenienceDto">
	select  user_id, pwd, representative_name, branch_name, phone_number, registration_date, conv_status, conv_seq
	from Convenience
	where user_id=#{userId} and pwd=SHA2(#{pwd}, 256)
</select>
	
<!-- 아이디 찾기  -->	
<select id="findUserByAddressAndPhoneNumber" parameterType="possg.com.a.dto.ConvenienceDto" resultType="possg.com.a.dto.ConvenienceDto">
     SELECT * from Convenience where representative_name = #{representativeName} and phone_number = #{phoneNumber}
</select>
    
    
 <!-- 변경   비밀번호 점주명 전화번호 -->   
   <!-- 비밀번호 업데이트 -->
<update id="updatePassword" parameterType="possg.com.a.dto.ConvenienceDto">
	UPDATE Convenience
	SET pwd = #{pwd}
	WHERE user_id = #{userId}
</update>

<!-- mypage -->
<select id="mypage" parameterType="java.lang.String" resultType="possg.com.a.dto.ConvenienceDto">
    	select user_id, representative_name, branch_name, registration_date, phone_number, conv_status
    	from Convenience
    	where user_id=#{userId}
</select>

<!-- mypage에서 비밀번호 점주명 전화번호변경 -->
<update id="updateMypage" parameterType="possg.com.a.dto.ConvenienceDto">
    	update Convenience
    	set 
    	representative_name=#{representativeName}, 
    	phone_number=#{phoneNumber}
    	where user_id=#{userId}
</update>

<!-- 비밀번호 업데이트 -->
	<update id="findPassword" parameterType="possg.com.a.dto.ConvenienceDto">
		UPDATE Convenience
		SET pwd = SHA2(#{pwd}, 256)
		WHERE user_id = #{userId}
	</update>

<!-- 비밀번호 유효성 체크 -->
<select id="changePassword" parameterType="String" resultType="possg.com.a.dto.ConvenienceDto">
select *
from Convenience
where user_id = #{userId}
</select>

<!-- key중복체크 -->
<select id="keycheck" parameterType="java.lang.String"
	resultType="java.lang.Integer">
	SELECT count(*)
	FROM Account_num
	WHERE account_code = #{convKey} AND code_status = 0;
</select>

<!-- 토큰이랑 아이디 db에 저장 -->
<insert id="insertToken" parameterType="possg.com.a.dto.TokenDto">
	insert into Token(refresh, user_id, created_at)
	values(#{refresh}, #{userId}, now())
</insert>

<!-- access토큰의 아이디를 파싱하여 userId로 보내주면 db에 저장된 user_id랑 비교해서 같은 refresh토큰만 선택 -->
<select id="selectToken" parameterType="possg.com.a.dto.TokenDto" resultType="String">
	select refresh
	from Token
	where refresh = #{refresh}
</select>

<insert id="insertSms" parameterType="Integer">
	insert Sms(sms_num)
	values(#{smsNum})
</insert>

<select id="selectSms" parameterType="Integer"  resultType="Integer">
	select count(*)
	from Sms
	where sms_num = #{smsNum}
</select>

<delete id="deleteSms" parameterType="Integer">
	delete from Sms
	where sms_num = #{smsNum}
</delete>


<delete id="logout" parameterType="String">
	delete 
	from Token
	where user_id = #{userId}	
</delete>

<delete id="autoTokenClean">
	delete
	from Token
	where datediff(now(), created_at) > 7
</delete>

</mapper>