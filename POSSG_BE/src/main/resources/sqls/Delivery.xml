<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="possg.com.a.dao.DeliveryDao">

<!-- 배달 회원 기능 -->
<!-- 장바구니에 넣기 -->
<insert id="callAddDelivery" parameterType="possg.com.a.dto.DeliveryDto">
    insert into Delivery(user_id, product_seq, order_status, quantity, product_name, order_date, ref, location, price, branch_name)
    values(
        (select customer_seq from Customer where customer_seq = #{userId}),
        (select product_seq from Product where product_name = #{productName}),
        0, #{quantity}, 
        (select product_name from Product where product_name = #{productName}), 
        now(), 0, #{location},
        (
            select 
                case 
                    when #{quantity} >= 1 and (select promotion_info from Product where product_name = #{productName}) = 2 then 
                        (select price_discount from Product where product_name = #{productName}) * #{quantity} <!-- (1개 이상일 때) -->
                    when   #{quantity} >= 2 and (select promotion_info from Product where product_name = #{productName}) = 4 then
                		(select price from Product where product_name = #{productName}) * (floor(#{quantity}/2) + #{quantity}%2) <!-- 1+1 -->
                	when #{quantity} >= 3 and (select promotion_info from Product where product_name = #{productName}) = 5 then 
                        (select price from Product where product_name = #{productName}) * (floor(#{quantity}/3)*2 + #{quantity}%3) <!-- 2+1 할인 -->
                    when #{quantity} >= 3 and (select promotion_info from Product where product_name = #{productName}) = 6 then 
                        (select price from Product where product_name = #{productName}) * (floor(#{quantity}/3) + #{quantity}%3*2) <!-- 1+2 할인 -->
                    when #{quantity} >= 4 and (select promotion_info from Product where product_name = #{productName}) = 7 then 
                        (select price from Product where product_name = #{productName}) * (floor(#{quantity}/4)*2 + #{quantity}%4*2) <!-- 2+2 할인 -->	              		
                    else
                        (select price from Product where product_name = #{productName}) * #{quantity}
                end
        ), 
        #{branchName}
    )
</insert>

<!-- 중복으로 장바구니에 담을 시 갯수랑 가격만 업데이트  할인도 적용시켜야함 완성 나중에 결제에 포인트 생기면 여기서 처리할수도 있음 그냥 price결괏값 - 포인트 -->
<update id="updateCountDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	update Delivery
	set quantity = quantity + #{quantity},
	price=(
	CASE 
            WHEN  quantity >= 1  AND (SELECT promotion_info FROM Product WHERE product_name = #{productName}) = 2 THEN
                (SELECT price_discount FROM Product WHERE product_name = #{productName}) * quantity 	<!-- (1개 이상일 때) -->             
            WHEN  (#{quantity} + quantity) >= 2  AND (SELECT promotion_info FROM Product WHERE product_name = #{productName}) = 4 THEN
                (FLOOR(quantity / 2) + quantity % 2) * (SELECT price FROM Product WHERE product_name = #{productName})                <!-- 1+1 -->
		     WHEN (#{quantity} + quantity) >= 3 AND (SELECT promotion_info FROM Product WHERE product_name = #{productName}) = 5 THEN
          		(FLOOR(quantity / 3) * 2 + quantity % 3) * (SELECT price FROM Product WHERE product_name = #{productName})			<!-- 2+1 할인 -->

     		WHEN (#{quantity} + quantity) >= 3 AND (SELECT promotion_info FROM Product WHERE product_name = #{productName}) = 6 THEN
                (FLOOR(quantity / 3) + quantity % 3*2) * (SELECT price FROM Product WHERE product_name = #{productName})
            WHEN (#{quantity} + quantity) >= 4 AND (SELECT promotion_info FROM Product WHERE product_name = #{productName}) = 7 THEN
                (FLOOR(quantity / 3)*2 + quantity % 3*2) * (SELECT price FROM Product WHERE product_name = #{productName})
            ELSE
                (price + #{price})
        END
        )
	where product_name = #{productName} and order_status = 0 and ref = 0 and user_id = #{userId}
</update>

<!-- 장바구니 상품 가져오기 -->
<select id="selectDelivery" parameterType="possg.com.a.dto.DeliveryDto" resultType="possg.com.a.dto.DeliveryDto">
	select *
	from Delivery
	where ref = 0 and user_id = #{userId} and order_status = 0
</select>

<!-- 장바구니 배달 주문 시 ref 갱신 -->
<update id="updateDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	update Delivery
	set ref = #{ref},
	order_status = 1
	where ref = 0 and user_id = #{userId} and order_status = 0
</update>
 
 <!-- 장바구니 삭제 -->
<delete id="deleteDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	delete
	from Delivery
	where ref = 0 and user_id = #{userId} and product_name = #{productName} and order_status = 0
</delete>

<!-- 배달주문 하기 -->
<insert id="insertDeliveryList" parameterType="possg.com.a.dto.DeliveryListDto">
	insert Delivery_list(user_id, del_ref, del_date, del_status, del_total_number, del_total_price, del_remark, branch_name)
	values( #{userId}, #{delRef}, now(), 1, #{delTotalNumber}, #{delTotalPrice}, #{delRemark}, #{branchName})
</insert>

<select id="selectCustomer" parameterType="Integer" resultType="possg.com.a.dto.CustomerDto">
	select *
	from Customer
	where customer_seq = #{customerSeq}
</select>

<!-- 배달 점주 기능 -->

<!-- 배달점포 입점 -->
<update id="convAddDelivery" parameterType="possg.com.a.dto.ConvenienceDto">
	update Convenience
	set conv_location = #{convLocation}, latitude = #{latitude}, longtitude = #{longtitude}
	where conv_seq = #{convSeq}
</update>

  <!-- 상세 배달 목록 -->
<select id="allDeliveryList" parameterType="possg.com.a.dto.DeliveryDto" resultType="possg.com.a.dto.DeliveryJoinDto">
	select 
	dl.seq,
    d.user_id,
    d.product_seq,
    d.order_status,
    d.quantity,
    d.product_name,
    d.ref,
    d.location,
    d.price,
    d.branch_name,
    dl.del_date,
    dl.del_status,
    dl.del_total_number,
    dl.del_total_price,
    dl.del_remark,
    dl.del_ref
	from Delivery as d
	inner join Delivery_list dl on dl.del_ref = d.ref
	where ref = #{ref} and branch_name = #{branchName}

</select>

<!-- 해당 지점의 점포에 배달주문건 추출 -->
<select id="convenienceDeliveryList" parameterType="possg.com.a.dto.DeliveryParam" resultType="possg.com.a.dto.DeliveryJoinDto">
	SELECT  distinct p.seq,
    o.user_id,
    o.product_seq,
    o.order_status,
    o.quantity,
    o.product_name,
    o.ref,
    o.location,
    o.price,
    o.branch_name,
    p.del_date,
    p.del_status,
    p.del_total_number,
    p.del_total_price,
    p.del_remark,
    p.del_ref
	FROM Delivery as o
	inner join Convenience j on o.branch_name = j.branch_name
	inner join Delivery_list p on o.ref = p.del_ref
	WHERE j.branch_name = #{branchName}
		<if test="orderStatus == 1 ">
			 AND p.del_status = 1
		</if>
		
		<if test="orderStatus == 2 ">
			AND p.del_status = 2
		</if>
		
		<if test="orderStatus == 3 ">
			AND p.del_status = 3
		</if>
		
		<if test="orderStatus == 4 ">
			AND p.del_status = 4 OR p.del_status = -1
		</if>
	order by p.seq desc
	limit ${(pageNumber* 12)}, 12
</select>

<select id="allDeliveryCount" parameterType="possg.com.a.dto.DeliveryParam" resultType="possg.com.a.dto.DeliveryCount">
	SELECT
    COUNT(CASE WHEN del_status = 1 THEN 1 END) AS beforeOrder,
    COUNT(CASE WHEN del_status = 2 THEN 1 END) AS afterOrder,
    COUNT(CASE WHEN del_status = 3 THEN 1 END) AS Delivering
	FROM Delivery_list
	where branch_name = #{branchName}
</select>

<!-- 배송진행 상태 업데이트 -->
<update id="statusUpdate" parameterType="possg.com.a.dto.DeliveryJoinDto">
    UPDATE Delivery AS o, Delivery_list AS p
    SET 
        o.order_status = CASE WHEN o.order_status &lt; 4 THEN o.order_status + 1 ELSE o.order_status END,
        p.del_status = CASE WHEN p.del_status &lt; 4 THEN p.del_status + 1 ELSE p.del_status END
    WHERE 
        o.ref = #{ref} AND p.del_ref = #{ref}
</update>

<select id="getDeliveryCount" parameterType="possg.com.a.dto.DeliveryParam"
		resultType="java.lang.Integer">
		select count(*) 
		from  Delivery_list		
		<if test="orderStatus == 1 ">
			where branch_name = #{branchName} and del_status = 1
		</if>
		
		<if test="orderStatus == 2 ">
			where branch_name = #{branchName} and del_status = 2
		</if>
		
		<if test="orderStatus == 3 ">
			where branch_name = #{branchName} and del_status = 3
		</if>
		
		<if test="orderStatus == 4 ">
			where branch_name = #{branchName} AND (del_status = 4 OR del_status = -1)
		</if>		
</select>


<select id="getDeliveryStatus" parameterType="String" resultType="possg.com.a.dto.ConvenienceDto">
	select * 
	from Convenience
	where user_id = #{userId}
</select>

<delete id="refuseDelivery" parameterType="String"> 
	update Delivery as o, Delivery_list as p
	set o.order_status = -1,
    p.del_status = -1
	where p.del_ref = #{ref} and o.ref = #{ref} and o.order_status = 1
</delete>

</mapper>