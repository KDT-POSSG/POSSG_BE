<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="possg.com.a.dao.DeliveryDao">

<!-- 배달 회원 기능 -->
<!-- 장바구니에 넣기 -->
<insert id="callAddDelivery" parameterType="possg.com.a.dto.DeliveryDto">
    insert into Delivery(user_id, product_seq, order_status, quantity, product_name, order_date, ref, location, price, branch_name, not_discount)
    select 
        t.customer_seq, 
        t.product_seq, 
        t.order_status, 
        t.quantity, 
        t.product_name, 
        t.order_date, 
        t.ref, 
        t.location, 
        t.price, 
        t.branchName, 
        t.not_discount
    from (
        select
            C.customer_seq,
            P.product_seq,
            0 as order_status,
            #{quantity} as quantity,
            P.product_name,
            now() as order_date,
            0 as ref,
            #{location} as location,
            case
                when #{quantity} >= 1 and P.promotion_info = 2 then P.price_discount * #{quantity}
                when #{quantity} >= 2 and P.promotion_info = 4 then P.price * (floor(#{quantity}/2) + #{quantity}%2)
                when #{quantity} >= 3 and P.promotion_info = 5 then P.price * (floor(#{quantity}/3)*2 + #{quantity}%3)
                when #{quantity} >= 3 and P.promotion_info = 6 then P.price * (floor(#{quantity}/3) + #{quantity}%3*2)
                when #{quantity} >= 4 and P.promotion_info = 7 then P.price * (floor(#{quantity}/4)*2 + #{quantity}%4*2)
                else P.price * #{quantity}
            end as price,
            #{branchName} as branchName,
            #{quantity} * P.price as not_discount
        from
            Customer C
        join
            Product P on P.product_name = #{productName} and P.conv_seq = #{convSeq}
        where
            C.customer_seq = #{userId}
        order by P.expiration_date asc limit 1
    ) as t
</insert>


<update id="updateCountDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	UPDATE Delivery
		SET 
		    quantity = quantity + #{quantity},
		    price = (
		        SELECT
		            CASE
		                WHEN quantity >= 1 AND P.promotion_info = 2 THEN P.price_discount * quantity
		                WHEN (#{quantity} + quantity) >= 2 AND P.promotion_info = 4 THEN 
		                    (FLOOR(quantity / 2) + quantity % 2) * P.price
		                WHEN (#{quantity} + quantity) >= 3 AND P.promotion_info = 5 THEN 
		                    (FLOOR(quantity / 3) * 2 + quantity % 3) * P.price
		                WHEN (#{quantity} + quantity) >= 3 AND P.promotion_info = 6 THEN 
		                    (FLOOR(quantity / 3) + quantity % 3 * 2) * P.price
		                WHEN (#{quantity} + quantity) >= 4 AND P.promotion_info = 7 THEN 
		                    (FLOOR(quantity / 4) * 2 + quantity % 4 * 2) * P.price
		                ELSE P.price + #{price}
		            END
		        FROM 
		            Product P 
		        WHERE 
		            P.product_name = #{productName}
		        ORDER BY 
		            P.expiration_date ASC 
		        LIMIT 1
		    ), 
		    not_discount = (quantity + #{quantity}) * (
		        SELECT 
		            P.price 
		        FROM 
		            Product P 
		        WHERE 
		            P.product_name = #{productName}
		        ORDER BY 
		            P.expiration_date ASC 
		        LIMIT 1
		    )
		WHERE 
		    product_name = #{productName} 
		    AND order_status = 0 
		    AND ref = 0 
		    AND user_id = #{userId}

</update>

<!-- 장바구니 상품 가져오기 -->
<select id="selectDelivery" parameterType="possg.com.a.dto.DeliveryDto" resultType="possg.com.a.dto.DeliveryDto">
	select *
	from Delivery
	where ref = 0 and user_id = #{userId} and order_status = 0
</select>

<!-- 장바구니 배달 주문 시 ref 갱신 -->
<update id="updateDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	update Delivery
	set ref = #{ref},
	order_status = 1
	where ref = 0 and user_id = #{userId} and order_status = 0
</update>
 
 <!-- 장바구니 삭제 -->
<delete id="deleteDelivery" parameterType="possg.com.a.dto.DeliveryDto">
	delete
	from Delivery
	where ref = 0 and user_id = #{userId} and product_name = #{productName} and order_status = 0
</delete>

<!-- 배달주문 하기 -->
<insert id="insertDeliveryList" parameterType="possg.com.a.dto.DeliveryListDto">
	insert Delivery_list(user_id, del_ref, del_date, del_status, del_total_number, del_total_price, del_remark, branch_name, not_discount)
	values( #{userId}, #{delRef}, now(), 1, #{delTotalNumber}, #{delTotalPrice}, #{delRemark}, #{branchName}, #{notDiscount})
</insert>

<select id="selectCustomer" parameterType="Integer" resultType="possg.com.a.dto.CustomerDto">
	select *
	from Customer
	where customer_seq = #{customerSeq}
</select>

<!-- 배달 점주 기능 -->

<!-- 배달점포 입점 -->
<update id="convAddDelivery" parameterType="possg.com.a.dto.ConvenienceDto">
	update Convenience
	set conv_location = #{convLocation}, latitude = #{latitude}, longtitude = #{longtitude}
	where conv_seq = #{convSeq}
</update>

  <!-- 상세 배달 목록 -->
<select id="allDeliveryList" parameterType="possg.com.a.dto.DeliveryDto" resultType="possg.com.a.dto.DeliveryJoinDto">
	select 
	dl.seq,
    d.user_id,
    d.product_seq,
    d.order_status,
    d.quantity,
    d.product_name,
    d.ref,
    d.location,
    d.price,
    d.branch_name,
    dl.del_date,
    dl.del_status,
    dl.del_total_number,
    dl.del_total_price,
    dl.del_remark,
    dl.del_ref
	from Delivery as d
	inner join Delivery_list dl on dl.del_ref = d.ref
	where dl.del_ref = #{ref} and dl.branch_name = #{branchName}

</select>

<!-- 해당 지점의 점포에 배달주문건 추출 -->
<select id="convenienceDeliveryList" parameterType="possg.com.a.dto.DeliveryParam" resultType="possg.com.a.dto.DeliveryJoinDto">
	SELECT distinct p.del_ref,
    o.user_id,
    o.product_seq,
    o.order_status,
    o.quantity,
    o.product_name,
    o.ref,
    o.location,
    o.price,
    o.branch_name,
    p.del_date,
    p.del_status,
    p.del_total_number,
    p.del_total_price,
    p.del_remark,    
    p.seq
	FROM Delivery as o
	join Delivery_list as p on o.ref = p.del_ref
	WHERE p.branch_name = #{branchName}
		<if test="orderStatus == 1 ">
			 AND p.del_status = 1
		</if>
		
		<if test="orderStatus == 2 ">
			AND p.del_status = 2
		</if>
		
		<if test="orderStatus == 3 ">
			AND p.del_status = 3
		</if>
		
		<if test="orderStatus == 4 ">
			AND p.del_status = 4 OR p.del_status = -1
		</if>
	order by p.del_date desc
	limit ${(pageNumber* 12)}, 12
</select>

<select id="allDeliveryCount" parameterType="possg.com.a.dto.DeliveryParam" resultType="possg.com.a.dto.DeliveryCount">
	SELECT
    COUNT(CASE WHEN del_status = 1 THEN 1 END) AS beforeOrder,
    COUNT(CASE WHEN del_status = 2 THEN 1 END) AS afterOrder,
    COUNT(CASE WHEN del_status = 3 THEN 1 END) AS Delivering
	FROM Delivery_list
	where branch_name = #{branchName} and seq != 1
</select>

<!-- 배송진행 상태 업데이트 -->
<update id="statusUpdate" parameterType="possg.com.a.dto.DeliveryJoinDto">
    UPDATE Delivery AS o, Delivery_list AS p
    SET 
        o.order_status = CASE WHEN o.order_status &lt; 4 THEN o.order_status + 1 ELSE o.order_status END,
        p.del_status = CASE WHEN p.del_status &lt; 4 THEN p.del_status + 1 ELSE p.del_status END
    WHERE 
        o.ref = #{ref} AND p.del_ref = #{ref}
</update>

<select id="getDeliveryCount" parameterType="possg.com.a.dto.DeliveryParam"
		resultType="java.lang.Integer">
		select count(*) 
		from  Delivery_list as dl
		<if test="orderStatus == 1 ">
			where dl.branch_name = #{branchName} and dl.del_status = 1
		</if>
		
		<if test="orderStatus == 2 ">
			where dl.branch_name = #{branchName} and dl.del_status = 2
		</if>
		
		<if test="orderStatus == 3 ">
			where dl.branch_name = #{branchName} and dl.del_status = 3
		</if>
		
		<if test="orderStatus == 4 ">
			where dl.branch_name = #{branchName} AND (dl.del_status = 4 OR dl.del_status = -1)
		</if>		
</select>


<select id="getDeliveryStatus" parameterType="String" resultType="possg.com.a.dto.ConvenienceDto">
	select * 
	from Convenience
	where user_id = #{userId}
</select>

<delete id="refuseDelivery" parameterType="String"> 
	update Delivery as o, Delivery_list as p
	set o.order_status = -1,
    p.del_status = -1
	where p.del_ref = #{ref} and o.ref = #{ref} and o.order_status = 1
</delete>

<select id="findProduct" parameterType="possg.com.a.dto.ProductDto" resultType="possg.com.a.dto.ProductDto">
    select * 
    from Product 
    where product_name = #{productName} and conv_seq = #{convSeq}
    order by expiration_date ASC
    limit 1;
</select>

</mapper>